import s from "sbor-ez-mode";
// Generated TypeScript schema for Scrypto SBOR types of package address: package_rdx1p4r9rkp0cq67wmlve544zgy0l45mswn6h798qdqm47x4762h383wa3
// Generated by: https://www.8arms1goal.com/sbor-ez-mode-ez-mode

export const Tick = s.tuple([s.number()]);

export const TickIndex = s.struct({
  kvs: s.internalAddress(),
  current: s.option(Tick),
});

export const NewPoolEvent = s.struct({
  component_address: s.address(),
  liquidity_receipt_address: s.address(),
  token_x_address: s.address(),
  token_y_address: s.address(),
  bin_span: s.number(),
});

export const QuantaSwap = s.struct({
  bin_span: s.number(),
  tick_index: TickIndex,
  bin_map: s.internalAddress(),
  lower_limit: s.decimal(),
  upper_limit: s.decimal(),
  active_x: s.decimal(),
  active_y: s.decimal(),
  active_total_claim: s.decimal(),
  liquidity_receipt_manager: s.address(),
  tokens_x: s.internalAddress(),
  tokens_y: s.internalAddress(),
});

export const ProtocolFeeEvent = s.struct({
  token_address: s.address(),
  amount: s.decimal(),
});

export const ValuationEvent = s.struct({
  amount_after_x: s.decimal(),
  amount_after_y: s.decimal(),
  price_after: s.decimal(),
});

export const LiquidityFeeEvent = s.struct({
  token_address: s.address(),
  amount: s.decimal(),
});

export const SwapEvent = s.struct({
  amount_change_x: s.decimal(),
  amount_change_y: s.decimal(),
  price_after: s.decimal(),
});

export const RemoveLiquidityEvent = s.struct({
  liquidity_receipt_id: s.nonFungibleLocalId(),
  amount_change_x: s.decimal(),
  amount_change_y: s.decimal(),
  removed_x: s.array(s.tuple([s.number(), s.decimal()])),
  removed_y: s.array(s.tuple([s.number(), s.decimal()])),
});

export const AddLiquidityEvent = s.struct({
  liquidity_receipt_id: s.nonFungibleLocalId(),
  amount_change_x: s.decimal(),
  amount_change_y: s.decimal(),
  added_x: s.array(s.tuple([s.number(), s.decimal()])),
  added_y: s.array(s.tuple([s.number(), s.decimal()])),
});

export const BurnLiquidityReceiptEvent = s.struct({
  liquidity_receipt_id: s.nonFungibleLocalId(),
});

export const MintLiquidityReceiptEvent = s.struct({
  liquidity_receipt_id: s.nonFungibleLocalId(),
});
